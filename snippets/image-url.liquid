{% liquid
  # theme-check-disable ImgLazyLoading 
  # theme-check-disable RemoteAsset
%}

{% comment %}
  Enhanced image rendering snippet for Shopify themes
  
  Improvements:
  - WebP format support with JPEG fallback
  - Art direction support via picture element
  - Custom breakpoints for better responsive control
  - Native aspect-ratio CSS support
  - More efficient srcset generation
  - Better accessibility with loading states
  - Focal point support for cropping
  
  Accepts:
  - img: {Object} The image object
  - size: {Number} Base size for calculations (default: 600)
  - orientation: {String} Aspect ratio preset or 'auto' (default: 'auto')
  - loading: {String} 'lazy' or 'eager' (default: 'lazy')
  - preload: {Boolean} Generate preload link (default: false)
  - sizes_attr: {String} Sizes attribute (default: '100vw')
  - scale: {Boolean} 2x scaling for retina (default: true)
  - formats: {String} Comma-separated formats 'webp,jpg' (default: 'webp,jpg')
  - class: {String} CSS classes
  - breakpoints: {String} Custom breakpoints '400,600,800,1200,1600,2400'
  - art_direction: {Boolean} Use picture element (default: false)
  - focal_point: {String} Focal point for cropping 'center', 'top', etc.
  - placeholder: {String} 'blur' or 'dominant' for LQIP
  - fetchpriority: {String} 'high', 'low', or 'auto' (default: 'auto')
  
  Usage:
  {% render 'image-enhanced' 
    img: product.featured_image, 
    size: 800, 
    orientation: 'ratio-16x9',
    class: 'hero-image',
    formats: 'webp,jpg',
    breakpoints: '400,800,1200,2400',
    art_direction: true,
    fetchpriority: 'high'
  %}
{% endcomment %}

{% liquid
  # Set defaults
  assign size = size | default: 600
  assign orientation = orientation | default: 'auto'
  assign loading = loading | default: 'lazy'
  assign preload = preload | default: false
  assign sizes_attr = sizes_attr | default: '100vw'
  assign scale = scale | default: true
  assign formats = formats | default: 'webp,jpg' | split: ','
  assign fetchpriority = fetchpriority | default: 'auto'
  
  # Default breakpoints if not provided
  if breakpoints
    assign bp_array = breakpoints | split: ','
  else
    assign bp_array = '400,600,800,1000,1200,1600,2000,2400' | split: ','
  endif
  
  # Calculate dimensions based on orientation
  case orientation
    when 'ratio-1x1', 'square'
      assign aspect_ratio = 1.0
      assign width = size
      assign height = size
    when 'ratio-4x3'
      assign aspect_ratio = 1.333
      assign width = size
      assign height = size | divided_by: 1.333 | round
    when 'ratio-16x9'
      assign aspect_ratio = 1.778
      assign width = size
      assign height = size | divided_by: 1.778 | round
    when 'ratio-21x9'
      assign aspect_ratio = 2.333
      assign width = size
      assign height = size | divided_by: 2.333 | round
    when 'ratio-3x4', 'portrait'
      assign aspect_ratio = 0.75
      assign width = size | times: 0.75 | round
      assign height = size
    when 'ratio-9x16'
      assign aspect_ratio = 0.5625
      assign width = size | times: 0.5625 | round
      assign height = size
    when 'auto'
      assign aspect_ratio = img.aspect_ratio
      assign width = size
      assign height = size | divided_by: img.aspect_ratio | round
    else
      # Custom ratio handling (e.g., '2.35' for cinemascope)
      assign aspect_ratio = orientation | times: 1.0
      assign width = size
      assign height = size | divided_by: aspect_ratio | round
  endcase
  
  # Apply scaling for retina
  if scale
    assign scale_factor = 2
  else
    assign scale_factor = 1
  endif
  
  # Build focal point parameter if provided
  assign crop_param = ''
  if focal_point and focal_point != ''
    assign crop_param = '&crop=' | append: focal_point
  endif
  
  # Generate placeholder if requested
  assign placeholder_url = ''
  if placeholder == 'blur'
    assign placeholder_url = img | image_url: width: 50, format: 'jpg' | append: '&blur=20'
  elsif placeholder == 'dominant'
    # This would need custom implementation or use Shopify's dominant color
    assign placeholder_url = img | image_url: width: 1, height: 1, format: 'jpg'
  endif
%}

{% if art_direction %}
  <picture class="picture-wrapper {{ class }}">
    {% for format in formats %}
      <source
        type="image/{{ format | replace: 'jpg', 'jpeg' | replace: 'pjpg', 'jpeg' }}"
        srcset="
          {%- for bp in bp_array -%}
            {%- assign bp_num = bp | times: 1 -%}
            {%- assign scaled_bp = bp_num | times: scale_factor -%}
            {%- if scaled_bp <= img.width -%}
              {{ img | image_url: width: scaled_bp, format: format }}{{ crop_param }} {{ bp }}w
              {%- unless forloop.last -%},{%- endunless -%}
            {%- endif -%}
          {%- endfor -%}
        "
        sizes="{{ sizes_attr }}"
      >
    {% endfor %}
    
    <img
      src="{{ img | image_url: width: width, format: formats.last }}{{ crop_param }}"
      alt="{{ img.alt | escape }}"
      width="{{ width }}"
      height="{{ height }}"
      loading="{{ loading }}"
      decoding="async"
      fetchpriority="{{ fetchpriority }}"
      {% if aspect_ratio %}style="aspect-ratio: {{ aspect_ratio }};"{% endif %}
      {% if placeholder_url %}style="background-image: url('{{ placeholder_url }}');"{% endif %}
      class="picture-img {{ class }}"
    >
  </picture>
{% else %}
  {%- capture srcset -%}
    {%- for bp in bp_array -%}
      {%- assign bp_num = bp | times: 1 -%}
      {%- assign scaled_bp = bp_num | times: scale_factor -%}
      {%- if scaled_bp <= img.width -%}
        {{ img | image_url: width: scaled_bp, format: formats.first }}{{ crop_param }} {{ bp }}w
        {%- unless forloop.last -%},{%- endunless -%}
      {%- endif -%}
    {%- endfor -%}
  {%- endcapture -%}
  
  {%- if preload -%}
    <link
      rel="preload"
      as="image"
      href="{{ img | image_url: width: width, format: formats.first }}{{ crop_param }}"
      imagesrcset="{{ srcset | strip }}"
      imagesizes="{{ sizes_attr }}"
      {% if formats.first == 'webp' %}type="image/webp"{% endif %}
    >
  {%- endif -%}
  
  <img
    srcset="{{ srcset | strip }}"
    src="{{ img | image_url: width: width, format: formats.first }}{{ crop_param }}"
    alt="{{ img.alt | escape }}"
    width="{{ width }}"
    height="{{ height }}"
    loading="{{ loading }}"
    sizes="{{ sizes_attr }}"
    decoding="async"
    fetchpriority="{{ fetchpriority }}"
    {% if aspect_ratio %}style="aspect-ratio: {{ aspect_ratio }};"{% endif %}
    {% if placeholder_url %}data-placeholder="{{ placeholder_url }}"{% endif %}
    class="{{ class }}"
  >
{% endif %}

{% liquid
  # theme-check-enable ImgLazyLoading 
  # theme-check-enable RemoteAsset
%}